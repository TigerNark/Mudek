{
    "sourceFile": "MudekServer/Pages/Login.razor",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1734894730415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734894854172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+@layout LoginLayout\r\n+@page \"/\"\r\n+@using MudekServer.Data\r\n+@using MudekServer.Models\r\n+@using Microsoft.EntityFrameworkCore\r\n+@using System.ComponentModel.DataAnnotations\r\n+@inject ApplicationDbContext dbContext\r\n+@inject NavigationManager Navigation\r\n+<head></head>\r\n+<link href=\"css/login.css\" rel=\"stylesheet\" />\r\n+\r\n+<div class=\"login-container\">\r\n+    <div class=\"login-card\">\r\n+        <div class=\"login-header\">\r\n+            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n+            <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n+        </div>\r\n+        <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n+\r\n+        <EditForm Model=\"userModel\" OnValidSubmit=\"HandleLogin\">\r\n+            <DataAnnotationsValidator />\r\n+\r\n+            <div class=\"form-group\">\r\n+                <label for=\"email\">Kurumsal E-posta</label>\r\n+                <InputText id=\"email\" @bind-Value=\"userModel.Email\" class=\"form-control\" placeholder=\"ornek@amasya.edu.tr\" />\r\n+                <ValidationMessage For=\"@(() => userModel.Email)\" />\r\n+            </div>\r\n+\r\n+            <div class=\"form-group\">\r\n+                <label for=\"password\">Şifre</label>\r\n+                <InputText id=\"password\" @bind-Value=\"userModel.Password\" type=\"password\" class=\"form-control\" placeholder=\"Şifrenizi girin\" />\r\n+                <ValidationMessage For=\"@(() => userModel.Password)\" />\r\n+            </div>\r\n+\r\n+            <div class=\"form-actions\">\r\n+                <button type=\"submit\" class=\"btn-login\">Giriş Yap</button>\r\n+            </div>\r\n+\r\n+            @if (loginErrorMessage != null)\r\n+            {\r\n+                <div class=\"error-message\">@loginErrorMessage</div>\r\n+            }\r\n+        </EditForm>\r\n+\r\n+        <div class=\"login-footer\">\r\n+            <p>Şifrenizi mi unuttunuz? <a href=\"/sifre-sifirla\">Şifremi Sıfırla</a></p>\r\n+            <p>İlk kez mi kullanıyorsunuz? <a href=\"/register\">Hesap Oluştur</a></p>\r\n+        </div>\r\n+    </div>\r\n+</div>\r\n+\r\n+@code {\r\n+    private UserModel userModel = new UserModel();\r\n+    private string loginErrorMessage;\r\n+\r\n+    private async Task HandleLogin()\r\n+    {\r\n+        // Kullanıcıyı doğrulamak için veritabanından kontrol ediyoruz\r\n+        var user = await dbContext.Users\r\n+            .FirstOrDefaultAsync(u => u.Email == userModel.Email);\r\n+\r\n+        if (user == null || user.Password != userModel.Password) // Şifre kontrolü\r\n+        {\r\n+            loginErrorMessage = \"E-posta veya şifre hatalı.\";\r\n+            return;\r\n+        }\r\n+\r\n+        // Başarılı giriş\r\n+        loginErrorMessage = null;\r\n+        Console.WriteLine($\"Login successful: {userModel.Email}\");\r\n+\r\n+        // Kullanıcıyı ana sayfaya yönlendiriyoruz\r\n+        Navigation.NavigateTo(\"/home\");\r\n+    }\r\n+\r\n+    public class UserModel\r\n+    {\r\n+        [Required(ErrorMessage = \"E-posta alanı gereklidir.\")]\r\n+        [EmailAddress(ErrorMessage = \"Geçerli bir e-posta adresi giriniz.\")]\r\n+        public string Email { get; set; }\r\n+\r\n+        [Required(ErrorMessage = \"Şifre alanı gereklidir.\")]\r\n+        [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n+        public string Password { get; set; }\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1734894860273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+@layout LoginLayout\r\n+@page \"/\"\r\n+@using MudekServer.Data\r\n+@using MudekServer.Models\r\n+@using Microsoft.EntityFrameworkCore\r\n+@using System.ComponentModel.DataAnnotations\r\n+@inject ApplicationDbContext dbContext\r\n+@inject NavigationManager Navigation\r\n+<head>\r\n+\r\n+</head>\r\n+\r\n+\r\n+<div class=\"login-container\">\r\n+    <div class=\"login-card\">\r\n+        <div class=\"login-header\">\r\n+            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n+            <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n+        </div>\r\n+        <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n+\r\n+        <EditForm Model=\"userModel\" OnValidSubmit=\"HandleLogin\">\r\n+            <DataAnnotationsValidator />\r\n+\r\n+            <div class=\"form-group\">\r\n+                <label for=\"email\">Kurumsal E-posta</label>\r\n+                <InputText id=\"email\" @bind-Value=\"userModel.Email\" class=\"form-control\" placeholder=\"ornek@amasya.edu.tr\" />\r\n+                <ValidationMessage For=\"@(() => userModel.Email)\" />\r\n+            </div>\r\n+\r\n+            <div class=\"form-group\">\r\n+                <label for=\"password\">Şifre</label>\r\n+                <InputText id=\"password\" @bind-Value=\"userModel.Password\" type=\"password\" class=\"form-control\" placeholder=\"Şifrenizi girin\" />\r\n+                <ValidationMessage For=\"@(() => userModel.Password)\" />\r\n+            </div>\r\n+\r\n+            <div class=\"form-actions\">\r\n+                <button type=\"submit\" class=\"btn-login\">Giriş Yap</button>\r\n+            </div>\r\n+\r\n+            @if (loginErrorMessage != null)\r\n+            {\r\n+                <div class=\"error-message\">@loginErrorMessage</div>\r\n+            }\r\n+        </EditForm>\r\n+\r\n+        <div class=\"login-footer\">\r\n+            <p>Şifrenizi mi unuttunuz? <a href=\"/sifre-sifirla\">Şifremi Sıfırla</a></p>\r\n+            <p>İlk kez mi kullanıyorsunuz? <a href=\"/register\">Hesap Oluştur</a></p>\r\n+        </div>\r\n+    </div>\r\n+</div>\r\n+\r\n+@code {\r\n+    private UserModel userModel = new UserModel();\r\n+    private string loginErrorMessage;\r\n+\r\n+    private async Task HandleLogin()\r\n+    {\r\n+        // Kullanıcıyı doğrulamak için veritabanından kontrol ediyoruz\r\n+        var user = await dbContext.Users\r\n+            .FirstOrDefaultAsync(u => u.Email == userModel.Email);\r\n+\r\n+        if (user == null || user.Password != userModel.Password) // Şifre kontrolü\r\n+        {\r\n+            loginErrorMessage = \"E-posta veya şifre hatalı.\";\r\n+            return;\r\n+        }\r\n+\r\n+        // Başarılı giriş\r\n+        loginErrorMessage = null;\r\n+        Console.WriteLine($\"Login successful: {userModel.Email}\");\r\n+\r\n+        // Kullanıcıyı ana sayfaya yönlendiriyoruz\r\n+        Navigation.NavigateTo(\"/home\");\r\n+    }\r\n+\r\n+    public class UserModel\r\n+    {\r\n+        [Required(ErrorMessage = \"E-posta alanı gereklidir.\")]\r\n+        [EmailAddress(ErrorMessage = \"Geçerli bir e-posta adresi giriniz.\")]\r\n+        public string Email { get; set; }\r\n+\r\n+        [Required(ErrorMessage = \"Şifre alanı gereklidir.\")]\r\n+        [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n+        public string Password { get; set; }\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1734894865613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n @using System.ComponentModel.DataAnnotations\r\n @inject ApplicationDbContext dbContext\r\n @inject NavigationManager Navigation\r\n <head>\r\n-\r\n+    <link href=\"css/login.css\" rel=\"stylesheet\" />\r\n </head>\r\n \r\n \r\n <div class=\"login-container\">\r\n@@ -85,176 +85,4 @@\n         [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n         public string Password { get; set; }\r\n     }\r\n }\r\n-@layout LoginLayout\r\n-@page \"/\"\r\n-@using MudekServer.Data\r\n-@using MudekServer.Models\r\n-@using Microsoft.EntityFrameworkCore\r\n-@using System.ComponentModel.DataAnnotations\r\n-@inject ApplicationDbContext dbContext\r\n-@inject NavigationManager Navigation\r\n-<head></head>\r\n-<link href=\"css/login.css\" rel=\"stylesheet\" />\r\n-\r\n-<div class=\"login-container\">\r\n-    <div class=\"login-card\">\r\n-        <div class=\"login-header\">\r\n-            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n-            <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n-        </div>\r\n-        <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n-\r\n-        <EditForm Model=\"userModel\" OnValidSubmit=\"HandleLogin\">\r\n-            <DataAnnotationsValidator />\r\n-\r\n-            <div class=\"form-group\">\r\n-                <label for=\"email\">Kurumsal E-posta</label>\r\n-                <InputText id=\"email\" @bind-Value=\"userModel.Email\" class=\"form-control\" placeholder=\"ornek@amasya.edu.tr\" />\r\n-                <ValidationMessage For=\"@(() => userModel.Email)\" />\r\n-            </div>\r\n-\r\n-            <div class=\"form-group\">\r\n-                <label for=\"password\">Şifre</label>\r\n-                <InputText id=\"password\" @bind-Value=\"userModel.Password\" type=\"password\" class=\"form-control\" placeholder=\"Şifrenizi girin\" />\r\n-                <ValidationMessage For=\"@(() => userModel.Password)\" />\r\n-            </div>\r\n-\r\n-            <div class=\"form-actions\">\r\n-                <button type=\"submit\" class=\"btn-login\">Giriş Yap</button>\r\n-            </div>\r\n-\r\n-            @if (loginErrorMessage != null)\r\n-            {\r\n-                <div class=\"error-message\">@loginErrorMessage</div>\r\n-            }\r\n-        </EditForm>\r\n-\r\n-        <div class=\"login-footer\">\r\n-            <p>Şifrenizi mi unuttunuz? <a href=\"/sifre-sifirla\">Şifremi Sıfırla</a></p>\r\n-            <p>İlk kez mi kullanıyorsunuz? <a href=\"/register\">Hesap Oluştur</a></p>\r\n-        </div>\r\n-    </div>\r\n-</div>\r\n-\r\n-@code {\r\n-    private UserModel userModel = new UserModel();\r\n-    private string loginErrorMessage;\r\n-\r\n-    private async Task HandleLogin()\r\n-    {\r\n-        // Kullanıcıyı doğrulamak için veritabanından kontrol ediyoruz\r\n-        var user = await dbContext.Users\r\n-            .FirstOrDefaultAsync(u => u.Email == userModel.Email);\r\n-\r\n-        if (user == null || user.Password != userModel.Password) // Şifre kontrolü\r\n-        {\r\n-            loginErrorMessage = \"E-posta veya şifre hatalı.\";\r\n-            return;\r\n-        }\r\n-\r\n-        // Başarılı giriş\r\n-        loginErrorMessage = null;\r\n-        Console.WriteLine($\"Login successful: {userModel.Email}\");\r\n-\r\n-        // Kullanıcıyı ana sayfaya yönlendiriyoruz\r\n-        Navigation.NavigateTo(\"/home\");\r\n-    }\r\n-\r\n-    public class UserModel\r\n-    {\r\n-        [Required(ErrorMessage = \"E-posta alanı gereklidir.\")]\r\n-        [EmailAddress(ErrorMessage = \"Geçerli bir e-posta adresi giriniz.\")]\r\n-        public string Email { get; set; }\r\n-\r\n-        [Required(ErrorMessage = \"Şifre alanı gereklidir.\")]\r\n-        [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n-        public string Password { get; set; }\r\n-    }\r\n-}\r\n-@layout LoginLayout\r\n-@page \"/\"\r\n-@using MudekServer.Data\r\n-@using MudekServer.Models\r\n-@using Microsoft.EntityFrameworkCore\r\n-@using System.ComponentModel.DataAnnotations\r\n-@inject ApplicationDbContext dbContext\r\n-@inject NavigationManager Navigation\r\n-\r\n-\r\n-\r\n-<div class=\"login-container\">\r\n-    <div class=\"login-card\">\r\n-        <div class=\"login-header\">\r\n-            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n-            <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n-        </div>\r\n-        <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n-\r\n-        <EditForm Model=\"userModel\" OnValidSubmit=\"HandleLogin\">\r\n-            <DataAnnotationsValidator />\r\n-\r\n-            <div class=\"form-group\">\r\n-                <label for=\"email\">Kurumsal E-posta</label>\r\n-                <InputText id=\"email\" @bind-Value=\"userModel.Email\" class=\"form-control\" placeholder=\"ornek@amasya.edu.tr\" />\r\n-                <ValidationMessage For=\"@(() => userModel.Email)\" />\r\n-            </div>\r\n-\r\n-            <div class=\"form-group\">\r\n-                <label for=\"password\">Şifre</label>\r\n-                <InputText id=\"password\" @bind-Value=\"userModel.Password\" type=\"password\" class=\"form-control\" placeholder=\"Şifrenizi girin\" />\r\n-                <ValidationMessage For=\"@(() => userModel.Password)\" />\r\n-            </div>\r\n-\r\n-            <div class=\"form-actions\">\r\n-                <button type=\"submit\" class=\"btn-login\">Giriş Yap</button>\r\n-            </div>\r\n-\r\n-            @if (loginErrorMessage != null)\r\n-            {\r\n-                <div class=\"error-message\">@loginErrorMessage</div>\r\n-            }\r\n-        </EditForm>\r\n-\r\n-        <div class=\"login-footer\">\r\n-            <p>Şifrenizi mi unuttunuz? <a href=\"/sifre-sifirla\">Şifremi Sıfırla</a></p>\r\n-            <p>İlk kez mi kullanıyorsunuz? <a href=\"/register\">Hesap Oluştur</a></p>\r\n-        </div>\r\n-    </div>\r\n-</div>\r\n-\r\n-@code {\r\n-    private UserModel userModel = new UserModel();\r\n-    private string loginErrorMessage;\r\n-\r\n-    private async Task HandleLogin()\r\n-    {\r\n-        // Kullanıcıyı doğrulamak için veritabanından kontrol ediyoruz\r\n-        var user = await dbContext.Users\r\n-            .FirstOrDefaultAsync(u => u.Email == userModel.Email);\r\n-\r\n-        if (user == null || user.Password != userModel.Password) // Şifre kontrolü\r\n-        {\r\n-            loginErrorMessage = \"E-posta veya şifre hatalı.\";\r\n-            return;\r\n-        }\r\n-\r\n-        // Başarılı giriş\r\n-        loginErrorMessage = null;\r\n-        Console.WriteLine($\"Login successful: {userModel.Email}\");\r\n-\r\n-        // Kullanıcıyı ana sayfaya yönlendiriyoruz\r\n-        Navigation.NavigateTo(\"/home\");\r\n-    }\r\n-\r\n-    public class UserModel\r\n-    {\r\n-        [Required(ErrorMessage = \"E-posta alanı gereklidir.\")]\r\n-        [EmailAddress(ErrorMessage = \"Geçerli bir e-posta adresi giriniz.\")]\r\n-        public string Email { get; set; }\r\n-\r\n-        [Required(ErrorMessage = \"Şifre alanı gereklidir.\")]\r\n-        [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n-        public string Password { get; set; }\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1734895207934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n <div class=\"login-container\">\r\n     <div class=\"login-card\">\r\n         <div class=\"login-header\">\r\n-            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n+            <img src=\"MudekServer\\wwwroot\\amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n             <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n         </div>\r\n         <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n \r\n"
                },
                {
                    "date": 1734895217116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n <div class=\"login-container\">\r\n     <div class=\"login-card\">\r\n         <div class=\"login-header\">\r\n-            <img src=\"MudekServer\\wwwroot\\amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n+            <img src=\"wwwroot\\amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n             <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n         </div>\r\n         <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n \r\n"
                },
                {
                    "date": 1734895231819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n <div class=\"login-container\">\r\n     <div class=\"login-card\">\r\n         <div class=\"login-header\">\r\n-            <img src=\"wwwroot\\amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n+            <img src=\"amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n             <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n         </div>\r\n         <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n \r\n"
                }
            ],
            "date": 1734894730415,
            "name": "Commit-0",
            "content": "@layout LoginLayout\r\n@page \"/\"\r\n@using MudekServer.Data\r\n@using MudekServer.Models\r\n@using Microsoft.EntityFrameworkCore\r\n@using System.ComponentModel.DataAnnotations\r\n@inject ApplicationDbContext dbContext\r\n@inject NavigationManager Navigation\r\n\r\n\r\n\r\n<div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n        <div class=\"login-header\">\r\n            <img src=\"images/amasya-üni-logo.png\" alt=\"Amasya Üniversitesi Logo\" class=\"uni-logo\">\r\n            <h1 class=\"login-title\">MÜDEK Sistemi</h1>\r\n        </div>\r\n        <p class=\"login-subtitle\">Kurumsal Giriş Paneli</p>\r\n\r\n        <EditForm Model=\"userModel\" OnValidSubmit=\"HandleLogin\">\r\n            <DataAnnotationsValidator />\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Kurumsal E-posta</label>\r\n                <InputText id=\"email\" @bind-Value=\"userModel.Email\" class=\"form-control\" placeholder=\"ornek@amasya.edu.tr\" />\r\n                <ValidationMessage For=\"@(() => userModel.Email)\" />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Şifre</label>\r\n                <InputText id=\"password\" @bind-Value=\"userModel.Password\" type=\"password\" class=\"form-control\" placeholder=\"Şifrenizi girin\" />\r\n                <ValidationMessage For=\"@(() => userModel.Password)\" />\r\n            </div>\r\n\r\n            <div class=\"form-actions\">\r\n                <button type=\"submit\" class=\"btn-login\">Giriş Yap</button>\r\n            </div>\r\n\r\n            @if (loginErrorMessage != null)\r\n            {\r\n                <div class=\"error-message\">@loginErrorMessage</div>\r\n            }\r\n        </EditForm>\r\n\r\n        <div class=\"login-footer\">\r\n            <p>Şifrenizi mi unuttunuz? <a href=\"/sifre-sifirla\">Şifremi Sıfırla</a></p>\r\n            <p>İlk kez mi kullanıyorsunuz? <a href=\"/register\">Hesap Oluştur</a></p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n@code {\r\n    private UserModel userModel = new UserModel();\r\n    private string loginErrorMessage;\r\n\r\n    private async Task HandleLogin()\r\n    {\r\n        // Kullanıcıyı doğrulamak için veritabanından kontrol ediyoruz\r\n        var user = await dbContext.Users\r\n            .FirstOrDefaultAsync(u => u.Email == userModel.Email);\r\n\r\n        if (user == null || user.Password != userModel.Password) // Şifre kontrolü\r\n        {\r\n            loginErrorMessage = \"E-posta veya şifre hatalı.\";\r\n            return;\r\n        }\r\n\r\n        // Başarılı giriş\r\n        loginErrorMessage = null;\r\n        Console.WriteLine($\"Login successful: {userModel.Email}\");\r\n\r\n        // Kullanıcıyı ana sayfaya yönlendiriyoruz\r\n        Navigation.NavigateTo(\"/home\");\r\n    }\r\n\r\n    public class UserModel\r\n    {\r\n        [Required(ErrorMessage = \"E-posta alanı gereklidir.\")]\r\n        [EmailAddress(ErrorMessage = \"Geçerli bir e-posta adresi giriniz.\")]\r\n        public string Email { get; set; }\r\n\r\n        [Required(ErrorMessage = \"Şifre alanı gereklidir.\")]\r\n        [MinLength(8, ErrorMessage = \"Şifre en az 8 karakter olmalıdır.\")]\r\n        public string Password { get; set; }\r\n    }\r\n}\r\n"
        }
    ]
}