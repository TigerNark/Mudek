{
    "sourceFile": "MudekServer/Pages/Exam.razor",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734890692371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734890713446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n @using MudekServer.Models\r\n @using MudekServer.Services\r\n \r\n <head>\r\n-    <link rel=\"stylesheet\" href=\"MudekServer\\wwwroot\\css\\Exam.css\">\r\n+    <link rel=\"stylesheet\" href=\"css\\Exam.css\">\r\n </head>\r\n \r\n <h3>Sınav Girişi</h3>\r\n \r\n"
                },
                {
                    "date": 1734890850284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,10 @@\n \r\n @using MudekServer.Models\r\n @using MudekServer.Services\r\n \r\n-<head>\r\n-    <link rel=\"stylesheet\" href=\"css\\Exam.css\">\r\n-</head>\r\n \r\n+\r\n <h3>Sınav Girişi</h3>\r\n \r\n @if (isLoading)\r\n {\r\n"
                },
                {
                    "date": 1734890861451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,11 @@\n @using MudekServer.Models\r\n @using MudekServer.Services\r\n \r\n \r\n-\r\n+<head>\r\n+    <link rel=\"stylesheet\" href=\"css\\Exam.css\">\r\n+</head>\r\n <h3>Sınav Girişi</h3>\r\n \r\n @if (isLoading)\r\n {\r\n"
                }
            ],
            "date": 1734890692371,
            "name": "Commit-0",
            "content": "@page \"/sinav-girisi\"\r\n@inject IJSRuntime JS\r\n@inject LessonService LessonService\r\n@inject SinavTurService SinavTurService\r\n@inject StudentService StudentService\r\n\r\n@using MudekServer.Models\r\n@using MudekServer.Services\r\n\r\n<head>\r\n    <link rel=\"stylesheet\" href=\"MudekServer\\wwwroot\\css\\Exam.css\">\r\n</head>\r\n\r\n<h3>Sınav Girişi</h3>\r\n\r\n@if (isLoading)\r\n{\r\n    <p>Dersler ve sınav türleri yükleniyor...</p>\r\n}\r\nelse\r\n{\r\n    <div class=\"form-group\">\r\n        <label for=\"dersSecim\">Ders Seçin:</label>\r\n        <select @onchange=\"DersSecildi\">\r\n            <option disabled selected>Bir ders seçin</option>\r\n            @foreach (var ders in Dersler)\r\n            {\r\n                <option value=\"@ders.CourseCode\">@ders.CourseName</option>\r\n            }\r\n        </select>\r\n    </div>\r\n}\r\n\r\n@if (seciliDers != null)\r\n{\r\n    <div class=\"form-group\">\r\n        <label for=\"sinavSecim\">Sınav Türü Seçin:</label>\r\n        <select @onchange=\"SinavTuruSecildi\">\r\n            <option disabled selected>Bir sınav türü seçin</option>\r\n            @foreach (var sinavTur in SinavTurleri)\r\n            {\r\n                <option value=\"@sinavTur.Adi\">@sinavTur.Adi</option>\r\n            }\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"sinavYuzdesi\">Sınav Yüzdesi:</label>\r\n        <input type=\"number\" @bind=\"sinavYuzdesi\" min=\"0\" max=\"100\" />\r\n    </div>\r\n}\r\n\r\n@if (seciliSinavTur != null && sinavYuzdesi.HasValue)\r\n{\r\n    <div class=\"form-group\">\r\n        <label for=\"soruSayisi\">Soru Sayısını Girin:</label>\r\n        <input type=\"number\" @bind=\"soruSayisi\" min=\"1\" />\r\n    </div>\r\n\r\n    <button @onclick=\"SorulariOlustur\">Soruları Oluştur</button>\r\n\r\n    @if (Sorular.Count > 0)\r\n    {\r\n        <h4>Soru Puanları ve Öğrenim Çıktıları</h4>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Soru</th>\r\n                    <th>Puan</th>\r\n                    <th>Öğrenim Çıktıları</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @foreach (var soru in Sorular)\r\n                {\r\n                    <tr>\r\n                        <td>Soru @soru.SoruNumarasi</td>\r\n                        <td>\r\n                            <input type=\"number\" @bind=\"soru.Puan\" min=\"0\" @oninput=\"CheckTotalPuan\" />\r\n                        </td>\r\n                        <td>\r\n                            @foreach (var ogrenimCiktisi in seciliDers.LearningOutcomes)\r\n                            {\r\n                                <label>\r\n                                    <input type=\"checkbox\" value=\"@ogrenimCiktisi.Description\"\r\n                                        @onchange=\"@(e => OgrenimCiktisiSecildi(soru, ogrenimCiktisi.Description, e))\" />\r\n                                    @ogrenimCiktisi.Description\r\n                                </label>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n\r\n        <button @onclick=\"OnNextClick\">Sonraki</button>\r\n    }\r\n}\r\n\r\n@if (showStudentScores)\r\n{\r\n    <h4>Öğrenci Notları</h4>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Öğrenci Numarası</th>\r\n                <th>Öğrenci Adı</th>\r\n                @foreach (var soru in Sorular)\r\n                {\r\n                    <th>Soru @soru.SoruNumarasi</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @foreach (var ogrenci in ogrenciler)\r\n            {\r\n                <tr>\r\n                    <td>@ogrenci.Numara</td>\r\n                    <td>@ogrenci.Isim @ogrenci.Soyisim</td>\r\n                    @foreach (var soru in Sorular)\r\n                    {\r\n                        <td>\r\n                            <input type=\"number\" @bind=\"ogrenciNotlar[ogrenci.Id][soru.SoruNumarasi]\" placeholder=\"Not girin\"\r\n                                min=\"0\" max=\"@soru.Puan\" /> / @soru.Puan\r\n                        </td>\r\n                    }\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n\r\n    <button >Kaydet</button>\r\n}\r\n\r\n\r\n@code {\r\n    private List<Lesson> Dersler = new List<Lesson>();\r\n    private List<SinavTur> SinavTurleri = new List<SinavTur>(); // Bu listeyi dinamik hale getireceğiz\r\n    private List<Soru> Sorular = new List<Soru>();\r\n    private Lesson seciliDers;\r\n    private SinavTur seciliSinavTur;\r\n    private int soruSayisi;\r\n    private int? sinavYuzdesi;\r\n    private bool isLoading = true;\r\n    private List<Student> ogrenciler = new List<Student>(); // Öğrenci Listesi\r\n    private Dictionary<int, Dictionary<int, int>> ogrenciNotlar = new Dictionary<int, Dictionary<int, int>>(); // Öğrenci Notları\r\n    private Dictionary<int, Dictionary<int, List<string>>> ogrenciOgretimCiktilari = new Dictionary<int, Dictionary<int, List<string>>>(); // Öğrenim çıktıları\r\n\r\n    private bool showStudentScores = false; // Öğrenci notlarını göstermek için kullanılan flag\r\n\r\n    protected override async Task OnInitializedAsync()\r\n    {\r\n        try\r\n        {\r\n            // Öğrencileri ve sınav türlerini asenkron olarak veritabanından al\r\n            Dersler = await LessonService.GetLessons();\r\n            ogrenciler = await StudentService.GetStudentsAsync();\r\n            SinavTurleri = await SinavTurService.GetSinavTurleriAsync(); // SinavTurService üzerinden sınav türlerini alıyoruz\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.WriteLine($\"Veri yüklenirken hata oluştu: {ex.Message}\");\r\n        }\r\n        finally\r\n        {\r\n            // Yükleme durumu güncelleniyor\r\n            isLoading = false;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private async void DersSecildi(ChangeEventArgs e)\r\n    {\r\n        if (e.Value != null)\r\n        {\r\n            // Ders seçimi yapıldı, ders bilgilerini yükle\r\n            seciliDers = await LessonService.GetLessonByCodeAsync(e.Value.ToString());\r\n            seciliSinavTur = null; // Sınav türünü sıfırlıyoruz\r\n            Sorular.Clear(); // Soruları sıfırlıyoruz\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private void SinavTuruSecildi(ChangeEventArgs e)\r\n    {\r\n        seciliSinavTur = SinavTurleri.FirstOrDefault(st => st.Adi == e.Value.ToString());\r\n    }\r\n\r\n    private void SorulariOlustur()\r\n    {\r\n        Sorular.Clear();\r\n        for (int i = 1; i <= soruSayisi; i++)\r\n        {\r\n            Sorular.Add(new Soru\r\n            {\r\n                SoruNumarasi = i,\r\n                Puan = 0\r\n            });\r\n        }\r\n\r\n        // Sorular oluşturulduktan sonra, ogrenciNotlar sözlüğünü başlatıyoruz.\r\n        foreach (var ogrenci in ogrenciler)\r\n        {\r\n            if (!ogrenciNotlar.ContainsKey(ogrenci.Id))\r\n            {\r\n                ogrenciNotlar[ogrenci.Id] = new Dictionary<int, int>();\r\n            }\r\n\r\n            foreach (var soru in Sorular)\r\n            {\r\n                // Her öğrenci ve her soru için puan başlatıyoruz (sıfır).\r\n                if (!ogrenciNotlar[ogrenci.Id].ContainsKey(soru.SoruNumarasi))\r\n                {\r\n                    ogrenciNotlar[ogrenci.Id][soru.SoruNumarasi] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void CheckTotalPuan()\r\n    {\r\n        // Toplam puan hesaplaması\r\n    }\r\n\r\n    private async Task OnNextClick()\r\n    {\r\n        // Geçiş işlemi\r\n        showStudentScores = true; // Öğrenci notlarını göstermek için flag'yi true yapıyoruz.\r\n    }\r\n\r\n    // OgrenimCiktisiSecildi metodu\r\n    private void OgrenimCiktisiSecildi(Soru soru, string ogrenimCiktisi, ChangeEventArgs e)\r\n    {\r\n        if ((bool)e.Value) // Eğer checkbox seçili ise\r\n        {\r\n            // Öğrenim çıktısını ekle\r\n            if (!ogrenciOgretimCiktilari.ContainsKey(soru.SoruNumarasi))\r\n            {\r\n                ogrenciOgretimCiktilari[soru.SoruNumarasi] = new Dictionary<int, List<string>>();\r\n            }\r\n\r\n            foreach (var ogrenci in ogrenciler)\r\n            {\r\n                if (!ogrenciOgretimCiktilari[soru.SoruNumarasi].ContainsKey(ogrenci.Id))\r\n                {\r\n                    ogrenciOgretimCiktilari[soru.SoruNumarasi][ogrenci.Id] = new List<string>();\r\n                }\r\n                ogrenciOgretimCiktilari[soru.SoruNumarasi][ogrenci.Id].Add(ogrenimCiktisi);\r\n            }\r\n        }\r\n        else // Eğer checkbox seçimi kaldırıldıysa\r\n        {\r\n            foreach (var ogrenci in ogrenciler)\r\n            {\r\n                ogrenciOgretimCiktilari[soru.SoruNumarasi][ogrenci.Id]?.Remove(ogrenimCiktisi);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}